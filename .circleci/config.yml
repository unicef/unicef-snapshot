version: 2
db-env: &db-env
  environment:
    POSTGRES_USER: postgres
    PGUSER: postgres
    POSTGRES_DB: test_unicef_snapshot
    POSTGRES_PASSWORD: postgres

py36: &py36
  working_directory: ~/code
  docker:
    - image: circleci/python:3.6
      environment:
        PGHOST: 127.0.0.1
        DATABASE_URL: "postgres://postgres:postgres@localhost:5432/test_unicef_snapshot"
        RELEASE_MATCH: "release/*"
    - image: circleci/postgres:9.5-alpine
      <<: *db-env

py37: &py37
  working_directory: ~/code
  docker:
    - image: circleci/python:3.7
      environment:
        PGHOST: 127.0.0.1
        DATABASE_URL: "postgres://postgres:postgres@localhost:5432/test_unicef_snapshot"
        RELEASE_MATCH: "release/*"
    - image: circleci/postgres:9.5-alpine
      <<: *db-env

jobs:
  lint:
    <<: *py36
    steps:
      - checkout
      - run:
          name: lint checks
          command: |
            export PATH=$PATH:/home/circleci/.local/bin
            pip install -r src/requirements/install.pip --user
            pip install -r src/requirements/testing.pip --user
            flake8 src/
            isort -rc src/ --check-only

  test-py36-d20:
    <<: *py36
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.0,<2.1" --user
            ./test.sh

  test-py36-d21:
    <<: *py36
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.1,<2.2" --user
            ./test.sh

  test-py36-d22:
    <<: *py36
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.2,<2.3" --user
            ./test.sh

  test-py37-d20:
    <<: *py37
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.0,<2.1" --user
            ./test.sh

  test-py37-d21:
    <<: *py37
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.1,<2.2" --user
            ./test.sh

  test-py37-d22:
    <<: *py37
    steps:
      - checkout
      - run:
          name: run tests
          command: |
            pip install "django>=2.2,<2.3" --user
            ./test.sh

  tag:
    working_directory: ~/code
    docker:
      - image: circleci/python:3.6
        environment:
          API_URL: https://api.github.com/repos/unicef/unicef-snapshot
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "83:eb:f3:a2:4a:b4:f9:3d:5c:9d:ef:5b:0b:4d:aa:64"
      - run:
          name: package and release
          command: |
            export PATH=/home/circleci/.local/bin:$PATH
            export TAG=${TAG:=${CIRCLE_BRANCH#*/}}
            git status
            git show-branch release/$TAG
            if [ $? -eq 0 ];then
              git reset --hard

              git config user.email "ci@unicef.org"
              git config user.name "CI"

              git checkout master
              git merge --no-ff release/$TAG -m "merge release/$TAG"
              git tag -a -m "v$TAG" $TAG
              git checkout develop
              git merge --no-ff release/$TAG -m "merge release/$TAG"
              git push origin --verbose --all
              git push origin --verbose --tags
              git push origin --verbose --delete release/$TAG
            fi
      - run:
          name: release
          command: |
            export TAG=${TAG:=${CIRCLE_BRANCH#*/}}
            export TODAY=`date '+%d %B %Y at %H:%M'`
            function is_pre()
            {
                [[ "$(echo "$TAG" | sed 's/[0-9.]//g')" == "" ]] && echo false || echo true
            }
            function data() {
            cat <<EOF
            { "tag_name": "$TAG",
              "name": "v$TAG",
              "body": "version $TAG - Built on $TODAY",
              "draft": false,
              "prerelease": $(is_pre)
            }
            EOF
            }
            data=$(data)
            curl -X POST -s \
              --fail --verbose \
              -H "Accept: application/json" \
              -H "Content-Type:application/json" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              ${API_URL}/releases \
              -d "$data"
      - run:
          name: init .pypirc
          command: |
            echo -e "[distutils]" >> ~/.pypirc
            echo -e "index-servers =" >> ~/.pypirc
            echo -e "    pypi" >> ~/.pypirc
            echo -e "" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username: $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password: $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create and upload package
          command: |
            python setup.py sdist upload

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint
      - test-py36-d20:
          requires:
            - lint
      - test-py36-d21:
          requires:
            - lint
      - test-py36-d22:
          requires:
            - lint
      - test-py37-d20:
          requires:
            - lint
      - test-py37-d21:
          requires:
            - lint
      - test-py37-d22:
          requires:
            - lint
      - tag:
          requires:
            - test-py36-d20
            - test-py36-d21
            - test-py36-d22
            - test-py37-d20
            - test-py37-d21
            - test-py37-d22
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
